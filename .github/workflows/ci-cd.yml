name: CI CD

on: push

jobs:
  brakeman:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Set up Ruby 2.6
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.6.x
    - name: Install dependencies
      run: gem install brakeman
    - name: Perform Brakeman vulnerability scan
      run: brakeman
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@master
    - name: Build application stack
      run: docker-compose build
    - name: Configure environment
      run: |
        rm -f .env
        echo "RAILS_ENV=test" >> .env
        echo "RAILS_MAX_THREADS=1" >> .env
        echo "WEB_CONCURRENCY=1" >> .env
        echo "SITE_HOSTNAME=roombooking-dev.adctheatre.com" >> .env
        echo "REDIS_CACHE=redis://127.0.0.1:6379/1" >> .env
        echo "REDIS_STORE=redis://127.0.0.1:6379/1" >> .env
        echo "CAMDRAM_APP_ID=${{ secrets.CAMDRAM_APP_ID }}" >> .env
        echo "CAMDRAM_APP_SECRET=${{ secrets.CAMDRAM_APP_SECRET }}" >> .env
        echo "SECRET_KEY_BASE=${{ secrets.SECRET_KEY_BASE }}" >> .env
        docker-compose run --rm web "bundle exec rails roombooking:docker"
    - name: Run tests
      run: docker-compose run --rm web "bundle exec rails test"
  deploy:
    name: Deploy
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: SSH to server
      if: github.ref == 'refs/heads/master'
      run: |
        umask 0077
        mkdir -p $HOME/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" >> $HOME/.ssh/id_rsa
        echo "${{ secrets.SSH_HOST_KEY }}" >> $HOME/.ssh/known_hosts
        ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd /opt/roombooking && bin/update && procodile restart"

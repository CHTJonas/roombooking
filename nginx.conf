upstream app_serv {
  # Location of the application server.
  server unix:///var/run/roombooking/app_serv.sock fail_timeout=0;
}

server {
  listen 80;
  server_name localhost;
  keepalive_timeout 5;

  # Path for static assets.
  root /home/roombooking/roombooking/public;

  # Path for nginx logs.
  access_log /home/roombooking/roombooking/log/nginx.access.log;
  error_log /home/roombooking/roombooking/log/nginx.error.log info;

  location / {
    proxy_set_header Host              $http_host;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        $connection_upgrade_gitlab

    proxy_connect_timeout       5;
    proxy_send_timeout          5;
    proxy_read_timeout          5;
    send_timeout                5;

    # If the file exists as a static file serve it directly.
    if (-f $request_filename) {
      break;
    }

    # Add .html to the end of the url then, if the file exists,
    # rewrite to have an explicit .html on the end and serve
    # it directly.
    if (-f $request_filename.html) {
      rewrite (.*) $1.html break;
    }

    # Rewrite all requests to the maintenance page if it exists
    # in the doc root. This is for Capistrano's disable web task.
    if (-f $document_root/maintenance.html) {
      rewrite  ^(.*)$  /maintenance.html last;
      break;
    }

    # Otherwise proxy to the application server!
    if (!-f $request_filename) {
      proxy_pass http://app_serv;
      break;
    }
  }

  # Setup error pages.
  error_page 500 /500.html;
  error_page 502 =503 /503.html;
  error_page 504 /504.html;

}
